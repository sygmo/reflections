When would you want to use a remote repository rather than keeping all your 
work local?

When working on a project with multiple contributors, or when I want to push 
work done on another computer.



Why might you want to always pull changes manually rather than having Git 
automatically stay up-to-date with your remote repository?

Another contributor may have altered the remote repo, so pulling those changes 
may interfere with whatever I'm working on locally.



Describe the differences between forks, clones, and branches. When would you 
use one instead of another?

Fork - used to create your own version of a public repo
Clone - copy of a repo on the local directory
Branch - used to create experimental features 



What is the benefit of having a copy of the last known state of the remote 
stored locally?

You can run git diff on the current file and the last known state. It also
makes it easier to return to themost recent stable state when you make a 
mistake.



How would you collaborate without using Git or GitHub? What would be easier, 
and what would be harder?

Without Git my collaborators and I would just need to use email or work in the 
same room together. This would remove the steep learning curve for Git, but 
sending each other our code snippets and keeping track of changes would be much
harder.



When would you want to make changes in a separate branch rather than directly 
in master? What benefits does each approach have?

I would use a separate branch to test out an experimental feature that I don't
want to alter the master branch just yet. It's easier to do everything directly
on the master branch, but it's often better to compartmentalize.